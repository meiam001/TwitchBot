[1mdiff --git a/TestingScript.py b/TestingScript.py[m
[1mindex 1354c1c..e2f269b 100644[m
[1m--- a/TestingScript.py[m
[1m+++ b/TestingScript.py[m
[36m@@ -1,20 +1,20 @@[m
[31m-# from gtts import gTTS[m
[32m+[m[32mfrom gtts import gTTS[m
 # from playsound import playsound[m
 [m
 [m
[31m-# mytext = 'Welcome to geeksforgeeks!'[m
[31m-#[m
[31m-# language = 'en'[m
[31m-#[m
[31m-# myobj = gTTS(text=mytext, lang=language, slow=False)[m
[31m-#[m
[31m-# myobj.save("welcome.mp3")[m
[31m-#[m
[31m-# # Playing the converted file[m
[32m+[m[32mmytext = 'testing'[m
[32m+[m
[32m+[m[32mlanguage = 'en'[m
[32m+[m
[32m+[m[32mmyobj = gTTS(text=mytext, lang=language, slow=False)[m
[32m+[m
[32m+[m[32mmyobj.save("welcome.mp3")[m
[32m+[m
[32m+[m[32m# Playing the converted file[m
 import os[m
 import re[m
 from multiprocessing import Process[m
 path_to_notepad = r'C:\Program Files\VideoLAN\VLC\vlc.exe'[m
[31m-path_to_file = 'Sounds\\watchTV.mp4'[m
[32m+[m[32m# path_to_file = 'Sounds\\watchTV.mp4'[m
 import subprocess[m
[31m-subprocess.run([path_to_notepad, path_to_file, '--play-and-exit', '--qt-start-minimized'])[m
\ No newline at end of file[m
[32m+[m[32msubprocess.run([path_to_notepad, "welcome.mp3", '--play-and-exit', '--qt-start-minimized'])[m
\ No newline at end of file[m
[1mdiff --git a/main.py b/main.py[m
[1mindex 21443e4..bb56254 100644[m
[1m--- a/main.py[m
[1m+++ b/main.py[m
[36m@@ -22,6 +22,12 @@[m [mswear_words_regex = '|'.join(swear_words)[m
 class ShoutOuts:[m
 [m
     def __init__(self, message: str, seen_today=0, sound='defaultshoutout.mp3'):[m
[32m+[m[32m        """[m
[32m+[m
[32m+[m[32m        :param message:[m
[32m+[m[32m        :param seen_today:[m
[32m+[m[32m        :param sound:[m
[32m+[m[32m        """[m
         self.seen_today = seen_today[m
         self.message = message[m
         self.sound = sound[m
[36m@@ -55,7 +61,8 @@[m [mstreamer_shoutouts = {[m
     'tepilobium':[m
         ShoutOuts('The demon of A+ is here!'),[m
     'ladysirene':[m
[31m-        ShoutOuts('The beauty of burlesque is here!'),[m
[32m+[m[32m        ShoutOuts('The beauty of burlesque is here!',[m
[32m+[m[32m                  sound='heygirl.mp3'),[m
     'pookiebutt':[m
         ShoutOuts('The bionic man!'),[m
     'marblehead9':[m
[36m@@ -68,9 +75,13 @@[m [mstreamer_shoutouts = {[m
     'kyoshirogaming':[m
         ShoutOuts('Dude takes suffering on the bike to the next level!',[m
                   sound='kyo.mp3'),[m
[31m-    'slowspoon':[m
[31m-        ShoutOuts('testing!'),[m
[31m-                           }[m
[32m+[m[32m    'debbieinshape':[m
[32m+[m[32m        ShoutOuts('The beauty of the bike!',[m
[32m+[m[32m                  sound='heygirl.mp3')[m
[32m+[m[32m    # 'slowspoon':[m
[32m+[m[32m    #     ShoutOuts('smoke.mp3', sound='smoke.mp3')[m
[32m+[m[32m}[m
[32m+[m
 chat_shoutouts = {[m
     'MC_Squared_Racing'.lower():[m
         ShoutOuts('Say hi to the world record holder for oldest man to operate a computer @{0}!'),[m
[36m@@ -83,18 +94,21 @@[m [mchat_shoutouts = {[m
 }[m
 [m
 class Sounds:[m
[32m+[m
     def __init__(self):[m
         """[m
         Add the file name from the Sounds folder along with desired command here for more sounds[m
         """[m
         self.sounds = {'!vomit': 'vomit.mp3',[m
                        '!stopwhining': 'stop_whining.mp3',[m
[32m+[m[32m                       '!kamehameha': 'kamehameha.mp3',[m
                        '!spoonsproblem': 'premature_ejaculation.mp3',[m
                        '!daddy': 'daddy.mp3',[m
                        '!goodbye': 'goodbye.mp3',[m
                        '!pain': 'struggle.mp3',[m
                        '!showtime': 'showtime.mp3',[m
                        '!thug': 'thug.mp3',[m
[32m+[m[32m                       '!shit': 'shit.mp3',[m
                        '!nuclear': 'nuclear.mp3',[m
                        '!baka': 'baka.mp3',[m
                        '!ekeseplosion': 'ekeseplosion.mp3',[m
[36m@@ -105,6 +119,7 @@[m [mclass Sounds:[m
                        '!egirl': 'egirl.mp3',[m
                        '!aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa': 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.mp3'}[m
         self.tts_time = 0[m
[32m+[m[32m        self.user_cooldowns = {} # {username: time.time()}[m
 [m
     def __iter__(self):[m
         return iter(self.sounds.keys())[m
[36m@@ -117,7 +132,14 @@[m [mclass Sounds:[m
             return True[m
         return False[m
 [m
[31m-    def generate_tts_filename(self, file_name='tts0.mp3'):[m
[32m+[m[32m    def generate_tts_filename(self, file_name='tts0.mp3') -> str:[m
[32m+[m[32m        """[m
[32m+[m[32m        Recursively checks for file names for TTS,[m
[32m+[m[32m        If file is currently being played add one and try again.[m
[32m+[m[32m        Otherwise delete file and return current file_name[m
[32m+[m[32m        :param file_name:[m
[32m+[m[32m        :return: str: unused file name for text to speech[m
[32m+[m[32m        """[m
         sounds_path = os.path.join(base_path, 'Sounds')[m
         sounds_dir = os.listdir(sounds_path)[m
         if file_name in sounds_dir:[m
[36m@@ -133,7 +155,7 @@[m [mclass Sounds:[m
 [m
     def save_tts(self, text: str) -> str:[m
         """[m
[31m-        generates a TTS file and returns the file path[m
[32m+[m[32m        generates a TTS file and returns the file name[m
         :param text: desired TTS[m
         :return: str: file path to tts file[m
         """[m
[36m@@ -145,8 +167,8 @@[m [mclass Sounds:[m
 [m
     def send_sound(self, sound_filename):[m
         """[m
[31m-[m
[31m-        :param sound_filename:[m
[32m+[m[32m        PLAYS a sound file using VLC subprocess[m
[32m+[m[32m        :param sound_filename: str: filename in Sounds folder[m
         :return:[m
         """[m
         file_path = f'{base_path}\Sounds\{sound_filename}'[m
[36m@@ -229,7 +251,7 @@[m [mclass TwitchBot(MyDatabase):[m
 [m
     def check_for_channel(self):[m
         """[m
[31m-[m
[32m+[m[32m        Checks if channel exists in database, if not create entry for it[m
         :return:[m
         """[m
         channel_obj = self.session.query(Channels)\[m
[36m@@ -242,7 +264,7 @@[m [mclass TwitchBot(MyDatabase):[m
     @staticmethod[m
     def _define_commands(comment_keywords: dict) -> str:[m
         """[m
[31m-[m
[32m+[m[32m        Truncates command keys into a list to return to users[m
         :param comment_keywords:[m
         :return:[m
         """[m
[36m@@ -260,17 +282,18 @@[m [mclass TwitchBot(MyDatabase):[m
         sock.send(f"JOIN #{self.channel}\r\n".encode('utf-8'))[m
         return sock[m
 [m
[31m-    def send_message(self, message: str):[m
[32m+[m[32m    def send_message(self, comment: str):[m
         """[m
[31m-[m
[31m-        :param message:[m
[32m+[m[32m        Sends a comment to chat defined in config file[m
[32m+[m[32m        :param comment: str: text to be sent[m
         :return:[m
         """[m
[31m-        self.sock.send(f'PRIVMSG #{self.channel} :{message}\n'.encode('utf-8'))[m
[32m+[m[32m        self.sock.send(f'PRIVMSG #{self.channel} :{comment}\n'.encode('utf-8'))[m
 [m
     def read_chat(self):[m
         """[m
[31m-[m
[32m+[m[32m        Waits for messages to come into chat[m
[32m+[m[32m        Entry point for every text based command[m
         :return:[m
         """[m
         while True:[m
[36m@@ -295,8 +318,8 @@[m [mclass TwitchBot(MyDatabase):[m
 [m
     def send_complement(self, message: str):[m
         """[m
[31m-[m
[31m-        :param message:[m
[32m+[m[32m        Say a nice thing to chat ~2% of the time[m
[32m+[m[32m        :param message: IRC formatted message[m
         :return:[m
         """[m
         if random.randint(0, 100) < 2:[m
[36m@@ -306,26 +329,37 @@[m [mclass TwitchBot(MyDatabase):[m
             self.send_message(complement)[m
 [m
     def send_time(self, *args):[m
[32m+[m[32m        """[m
[32m+[m[32m        Sends the time of the current machine to chat[m
[32m+[m[32m        :param args: dummy var[m
[32m+[m[32m        :return:[m
[32m+[m[32m        """[m
         now = datetime.now()[m
         current_time = now.strftime("%H:%M:%S")[m
         send_string = f'The current time is {current_time} (west coast US)'[m
         self.send_message(send_string)[m
 [m
     def lurk(self, *args):[m
[32m+[m[32m        """[m
[32m+[m[32m        Sends a nice lil message to lurkers who let me know[m
[32m+[m[32m        :param args:[m
[32m+[m[32m        :return:[m
[32m+[m[32m        """[m
         message = args[0][m
         user = get_user(message)[m
         self.send_message(f'Thanks for stopping by @{user}! '[m
                           f'Remember, my followers are objectively better than other people.')[m
 [m
[31m-    def rewards(self, *args):[m
[31m-        # self.send_message('!tts <message> - 10 SpoonBucks')[m
[31m-        self.send_message('!wordcount <username> <word or regular expression> - 10 SpoonBucks, '[m
[31m-                          '!breakaway (Attack from the gun in next race, recorded on GoPro and stream after)'[m
[31m-                          ' - 1000 SpoonBucks')[m
[32m+[m[32m    # def rewards(self, *args):[m
[32m+[m[32m    #     # self.send_message('!tts <message> - 10 SpoonBucks')[m
[32m+[m[32m    #     self.send_message('!wordcount <username> <word or regular expression> - 10 SpoonBucks, '[m
[32m+[m[32m    #                       '!breakaway (Attack from the gun in next race, recorded on GoPro and stream after)'[m
[32m+[m[32m    #                       ' - 1000 SpoonBucks')[m
 [m
     def respond_to_message(self, message: str):[m
         """[m
[31m-[m
[32m+[m[32m        Responds to keywords defined in self.comment_keywords[m
[32m+[m[32m        And to SPRINT[m
         :param message:[m
         :return:[m
         """[m
[36m@@ -342,8 +376,8 @@[m [mclass TwitchBot(MyDatabase):[m
 [m
     def give_shoutout(self, message: str):[m
         """[m
[31m-[m
[31m-        :param message:[m
[32m+[m[32m        Certain users frequent my chat, this gives them a shoutout with an audio cue![m
[32m+[m[32m        :param message: IRC formatted message[m
         :return:[m
         """[m
         user = get_user(message)[m
[36m@@ -365,7 +399,8 @@[m [mclass TwitchBot(MyDatabase):[m
 [m
     def check_sound(self, message):[m
         """[m
[31m-[m
[32m+[m[32m        Checks chat to see if sound command was sent[m
[32m+[m[32m        Sends it if so[m
         :param message:[m
         :return:[m
         """[m
[36m@@ -376,13 +411,19 @@[m [mclass TwitchBot(MyDatabase):[m
             self.sounds.send_sound(sound_filename)[m
 [m
     def check_tts(self, message):[m
[32m+[m[32m        """[m
[32m+[m[32m        If user uses !tts command sends it on stream[m
[32m+[m[32m        :param message:[m
[32m+[m[32m        :return:[m
[32m+[m[32m        """[m
         comment = get_comment(message)[m
         user = get_user(message)[m
[31m-        tts_cooldown = 30[m
[32m+[m[32m        global_cooldown = 10[m
[32m+[m[32m        user_cooldown = 180[m
         if comment.startswith('!tts'):[m
             current_time = time.time()[m
[31m-            tts_diff = current_time - self.sounds.tts_time[m
[31m-            if tts_diff > tts_cooldown:[m
[32m+[m[32m            cooldown = self.cooldown(message, global_cooldown, user_cooldown)[m
[32m+[m[32m            if not cooldown:[m
                 text = ''[m
                 tts_list = comment.split('!tts')[m
                 if len(tts_list) > 1:[m
[36m@@ -392,7 +433,35 @@[m [mclass TwitchBot(MyDatabase):[m
                     self.sounds.send_sound(tts_file_path)[m
                 self.sounds.tts_time=current_time[m
             else:[m
[31m-                self.send_message(f'@{user} {tts_cooldown - int(tts_diff)} seconds till you can do that again')[m
[32m+[m[32m                self.send_message(cooldown)[m
[32m+[m
[32m+[m[32m    def cooldown(self, message, global_cooldown: int, user_cooldown: int) -> str:[m
[32m+[m[32m        """[m
[32m+[m[32m        Determines and assigns global and user cooldowns for TTS functions[m
[32m+[m[32m        :param message:[m
[32m+[m[32m        :param global_cooldown:[m
[32m+[m[32m        :param user_cooldown:[m
[32m+[m[32m        :return:[m
[32m+[m[32m        """[m
[32m+[m[32m        current_time = time.time()[m
[32m+[m[32m        global_diff = current_time-self.sounds.tts_time[m
[32m+[m[32m        if global_diff > global_cooldown:[m
[32m+[m[32m            user = get_user(message)[m
[32m+[m[32m            if user not in self.sounds.user_cooldowns:[m
[32m+[m[32m                self.sounds.user_cooldowns[user] = current_time[m
[32m+[m[32m                self.sounds.tts_time = current_time[m
[32m+[m[32m                return ''[m
[32m+[m[32m            else:[m
[32m+[m[32m                user_diff = current_time-self.sounds.user_cooldowns[user][m
[32m+[m[32m                if user_diff > user_cooldown:[m
[32m+[m[32m                    self.sounds.user_cooldowns[user] = current_time[m
[32m+[m[32m                    self.sounds.tts_time = current_time[m
[32m+[m[32m                    return ''[m
[32m+[m[32m                else:[m
[32m+[m[32m                    return f'@{user} you still got {user_cooldown - int(user_diff)} seconds before you can use text to speech'[m
[32m+[m[32m        else:[m
[32m+[m[32m            return f'Global text to speech cooldown still has {global_cooldown - int(global_diff)} seconds remaining'[m
[32m+[m
 [m
     def send_stats(self, message):[m
         stats = self.get_channel_stats_obj(message)[m
